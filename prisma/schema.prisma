generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  CUSTOMER
  ORGANIZER
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum PointType {
  CREDIT
  DEBIT
}

enum CouponStatus {
  ACTIVE
  EXPIRED
  USED
}

model User {
  id             String            @id @default(cuid())
  email          String            @unique
  passwordHash   String
  name           String
  bio            String?
  avatarUrl      String?
  role           UserRole          @default(CUSTOMER)
  referralCode   String?           @unique
  referredByCode String?
  referredById   String?
  referredBy     User?             @relation("UserReferral", fields: [referredById], references: [id], onDelete: Cascade)
  referrals      User[]            @relation("UserReferral")
  points         Int               @default(0)
  vouchers       Voucher[]
  organizer      OrganizerProfile?
  pointsHistory  PointHistory[]
  coupons        Coupon[]
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt

  @@index([role])
}

model OrganizerProfile {
  id        String         @id @default(cuid())
  user      User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String         @unique
  orgName   String
  orgDetail String
  status    ApprovalStatus @default(PENDING)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Voucher {
  id         String   @id @default(cuid())
  code       String   @unique
  discount   Int
  validForm  DateTime
  validUntil DateTime
  used       Boolean  @default(false)
  owner      User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId    String
  createdAt  DateTime @default(now())

  @@index([validUntil])
}

model PointHistory {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  points    Int
  type      String   @default("CREDIT")
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Coupon {
  id             String   @id @default(cuid())
  code           String   @unique
  discountAmount Int
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  isUsed         Boolean  @default(false)
  createdAt      DateTime @default(now())
  expiresAt      DateTime
}
